import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import Header from '@/components/Header/Header';
import { FooterSection } from '../components/Footer/Footer';
import endpoints from '@/lib/api/endpoints';
import { apiClient } from '@/lib/api/apiClient';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // const url =
  //   process.env.NEXT_PUBLIC_API_BASE_URL + endpoints.kitchen.getKitchen;
  // const url = {`${process.env.NEXT_PUBLIC_API_BASE_URL}${endpoints.}`;};
  // const url = `${process.env.NEXT_PUBLIC_API_BASE_URL_1}${endpoints.todo.getTodo}`;
  // console.log('url', url);
  // const options = { method: 'GET', headers: { accept: 'application/json' } };

  // const response = await fetch(url, options);
  // const text = await response.text();
  // console.log('Raw Response:', text);

  // try {
  //   const data = JSON.parse(text);
  //   console.log('Parsed Data:', data);
  // } catch (err) {
  //   console.error('Failed to parse JSON:', err);
  // }
  const a = await apiClient.get(
    endpoints.todo.getTodoById('6803cdf827ad591cd41b3630'),
    {
      next: { tags: ['todo'] },
      cache: 'force-cache',
      headers: {
        Authorization: `Bearer ${process.env.NEXT_PUBLIC_API_KEY}`,
      },
    },
  );
  console.log(a);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Header />
        {children}
        <FooterSection />
      </body>
    </html>
  );
}
